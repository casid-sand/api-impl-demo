---
openapi: 3.0.0
info:
  title: <overriden by annotation. see Application class>
  description: "Give access (CRUD) to every video games of the famous 90's computer : ATARI ST."
  contact:
    name: Fran√ßois-Xavier Robin
    url: https://www.fxjavadevblog.fr
    email: webmaster@fxjavadevblog.fr
  license:
    name: Apache 2.0
    url: https://www.fxjavadevblog.fr
  version: <overriden by annotation see Application class>
  x-data-atari: ST, STF, STFM, STE, MEGA ST, MEGA STE, FALCON
  x-data-protection: NONE

tags:
- name: Health and Metrics
  description: get metadada from the underlaying application.
  
components:
  schemas:
    Health:
      type: object
      properties:
        status:
           type: string
           enum: [UP, DOWN]
        checks:
          type: array
          items:
            type: object            
            properties:
              name:
                type: string
              status:
                type: string
                enum: [UP, DOWN]
              data:
                type: object
                properties:
                  app_name:
                    type: string
                    decription: the application tiny name
                  app_title:
                    type: string  
                    description: the application full title
                  app_version:
                    type: string
                    description: the application version
                    pattern: '^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$'  
                  api_version:
                    type: string
                    description: the API version
                    example : 'v1'
                  api_full_path:
                    type: string
                    description: full path to the API
                    example: '/api-impl-demo/v1/api'
                  started_at:
                    type: string                    
                    format: date-time
                    description: date-time when the application was started.
                  uptime:
                    type: string
                    description: how long the application is running. Time format is hours:minutes:seconds.millisec.
                    example: '00:00:28.174'                          
            required:
            - name
            - status
      required:
        - status
        - checks
paths:
  /health:
    servers:
    - url: /api-impl-demo/v1
      description: Override base path for all operations with the /health path
    get:
      tags:
      - Health and Metrics
      summary: Returns information (JSON) about the API and the backend resources health.
      produces: application/json
      responses:
        "200":
          description: OK   
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'    
        "500":
          description: The API is not ready.
        "404":
          description: There is no monitored API at this address.
            
  /metrics:
    servers:
    - url: /api-impl-demo/v1
      description: Override base path for all operations with the /metrics path
    get:
      tags:
      - Health and Metrics
      summary: Returns statistics (PLAIN TEXT) about the running API.
      produces: text/plain
      responses:
        "200":
           description: OK
           content:
            text/plain:
              schema:          
                type: string
              